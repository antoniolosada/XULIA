/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.32
 * Generated at: 2015-09-12 08:11:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<!-- saved from url=(0087)http://www.desarrollolibre.net/public/download/speechRecognition/speechRecognition.html -->\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <link rel=\"stylesheet\"  media=\"screen\" type=\"text/css\"  href=\"css/estilos.css\">\n");
      out.write("        <title>RECVOZ.GOOGLE.DESACTIVO</title>       \n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            \n");
      out.write("            // FUNCIONES AJAX  \n");
      out.write("            /*\n");
      out.write("            function tratamientoVOZ2(frase){\n");
      out.write("                var req = new XMLHttpRequest();\n");
      out.write("                req.open(\"POST\", \"GrabaDiscoLocal\", false);\n");
      out.write("                req.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n");
      out.write("                req.send(\"frase=\" + frase);\n");
      out.write("                var tmp;\n");
      out.write("                if ((req.readyState === 4) && (req.status === 200)) {\n");
      out.write("                    tmp =  req.responseText;\n");
      out.write("                }\n");
      out.write("                document.getElementById(\"logs\").value += tmp;    \n");
      out.write("            }    \n");
      out.write("            */\n");
      out.write("                var IDIOMA = \"\";\n");
      out.write("                var CODIGO_IDIOMA = \"\";\n");
      out.write("                var ARRANQUE_AUTOMATICO = 'N';\n");
      out.write("                // Leer los datos GET de nuestra pagina y devolver un array asociativo (Nombre de la variable GET => Valor de la variable).\n");
      out.write("                function getUrlVars()\n");
      out.write("                {\n");
      out.write("                    var vars = [], hash;\n");
      out.write("                    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\n");
      out.write("                    for(var i = 0; i < hashes.length; i++)\n");
      out.write("                    {\n");
      out.write("                        hash = hashes[i].split('=');\n");
      out.write("                        vars.push(hash[0]);\n");
      out.write("                        vars[hash[0]] = hash[1];\n");
      out.write("                    }\n");
      out.write("                    return vars;\n");
      out.write("                }                \n");
      out.write("                function tratamientoVOZ(frase)\n");
      out.write("                {\n");
      out.write("                    var req = new XMLHttpRequest();                \n");
      out.write("                    req.open(\"POST\", \"GrabaDiscoLocal\", true);\n");
      out.write("                    req.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n");
      out.write("\n");
      out.write("                    var tmp;\n");
      out.write("                    req.onreadystatechange = function(){                    \n");
      out.write("                    if ((req.readyState === 4) && (req.status === 200)) {\n");
      out.write("                        tmp =  req.responseText;\n");
      out.write("                    }\n");
      out.write("                    if (tmp !== undefined)\n");
      out.write("                    {\n");
      out.write("                        var REANUDAR = 'REANUDAR.'+IDIOMA;\n");
      out.write("                        if ((tmp.substring(0,5) === \"PARAR\") && (recognizing === true))\n");
      out.write("                        {\n");
      out.write("                            document.getElementById(\"logs\").value += tmp;\n");
      out.write("                            recognizing = false;\n");
      out.write("                            recognition.stop();\n");
      out.write("                            document.getElementById(\"procesar\").innerHTML = \"Escuchar\";\n");
      out.write("                            document.title = 'RECVOZ.GOOGLE.'+IDIOMA+'.DESACTIVO';\n");
      out.write("                            \n");
      out.write("                            var myVar = setInterval(function(){ tratamientoVOZ(\"\") }, 1000);\n");
      out.write("                        }\n");
      out.write("                        else if ((tmp.substring(0,REANUDAR.length) === REANUDAR))\n");
      out.write("                        {\n");
      out.write("                            if (recognizing === false)\n");
      out.write("                            {\n");
      out.write("                                document.getElementById(\"logs\").value += tmp;\n");
      out.write("                                clearInterval(myVar);\n");
      out.write("                                recognition.start();\n");
      out.write("                                recognizing = true;\n");
      out.write("                                document.getElementById(\"procesar\").innerHTML = \"Detener\";\n");
      out.write("                                document.title = 'RECVOZ.GOOGLE.'+IDIOMA+'.ACTIVO';\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                        else if ((tmp.substring(0,8) === 'REANUDAR'))\n");
      out.write("                        {\n");
      out.write("                            //He recuperado información de reanudación de otro idioma\n");
      out.write("                            //Paramos el reconocimiento del idioma actual\n");
      out.write("                            if (recognizing === true)\n");
      out.write("                            {\n");
      out.write("                                recognizing = false;\n");
      out.write("                                recognition.stop();\n");
      out.write("                                document.getElementById(\"procesar\").innerHTML = \"Escuchar\";\n");
      out.write("                                document.title = 'RECVOZ.GOOGLE.'+IDIOMA+'.DESACTIVO';\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                req.send(\"frase=\" + escape(frase));\n");
      out.write("            }              \n");
      out.write("                                   \n");
      out.write("            // CONFIGURACIÓN DEL SOPORTE DE RECONOCIMIENTO DE VOZ\n");
      out.write("            var recolector = \"\";\n");
      out.write("            var recognition;\n");
      out.write("            var recognizing = false;\n");
      out.write("            if (!('webkitSpeechRecognition' in window)) {\n");
      out.write("                alert(\"¡API no soportada!\");\n");
      out.write("            }else{\n");
      out.write("                recognition = new webkitSpeechRecognition();\n");
      out.write("                recognition.lang = CODIGO_IDIOMA;\n");
      out.write("                //recognition.lang = \"pt-BR\";\n");
      out.write("                recognition.continuous = true;\n");
      out.write("                recognition.interimResults = true;\n");
      out.write("\n");
      out.write("                recognition.onstart = function(){\n");
      out.write("                recognizing = true;\n");
      out.write("                console.log(\"Comenzando a escuchar\");\n");
      out.write("                document.getElementById(\"logs\").value += \"Comenzando a escuchar... \\n\";\n");
      out.write("                document.title = 'RECVOZ.GOOGLE.'+IDIOMA+'.ACTIVO';\n");
      out.write("                };\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            recognition.onresult = function(event) {\n");
      out.write("                for (var i = event.resultIndex; i < event.results.length; i++) {\n");
      out.write("                    if(event.results[i].isFinal){\n");
      out.write("                        recolector = event.results[i][0].transcript;\n");
      out.write("                        tratamientoVOZ(recolector);\n");
      out.write("                        document.getElementById(\"texto\").value += recolector;\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            };\n");
      out.write("            recognition.onerror = function(event) {                \n");
      out.write("                /*for (var i = event.resultIndex; i < event.results.length; i++) {\n");
      out.write("                    if(event.results[i].isFinal){                        \n");
      out.write("                        document.getElementById(\"logs\").value += event.results[i][0].transcript;\n");
      out.write("                    }\n");
      out.write("                } */                \n");
      out.write("            };\n");
      out.write("            recognition.onend = function() {\n");
      out.write("                if (ARRANQUE_AUTOMATICO === 'S')\n");
      out.write("                {\n");
      out.write("                    if (recognizing === true)\n");
      out.write("                        recognition.start();\n");
      out.write("                }\n");
      out.write("                else\n");
      out.write("                {\n");
      out.write("                    recognizing = false;\n");
      out.write("                    document.getElementById(\"procesar\").innerHTML = \"Activar\";\n");
      out.write("                    console.log(\"Terminó de escuchar, llegó a su fin\");\n");
      out.write("                    document.getElementById(\"logs\").value += \"Terminó de escuchar, llegó a su fin.\\n\";\n");
      out.write("                    document.title = 'RECVOZ.GOOGLE.'+IDIOMA+'.DESACTIVO';\n");
      out.write("                }\n");
      out.write("            };\n");
      out.write("            function procesar() {\n");
      out.write("                if (recognizing === false) \n");
      out.write("                {\n");
      out.write("                    recognition.start();\n");
      out.write("                    recognizing = true;\n");
      out.write("                    document.getElementById(\"procesar\").innerHTML = \"Detener\";\n");
      out.write("                    document.title = 'RECVOZ.GOOGLE.'+IDIOMA+'.ACTIVO';\n");
      out.write("                } \n");
      out.write("                else \n");
      out.write("                {\n");
      out.write("                    recognition.stop();\n");
      out.write("                    recognizing = false;\n");
      out.write("                    document.getElementById(\"procesar\").innerHTML = \"Escuchar\";\n");
      out.write("                    document.title = 'RECVOZ.GOOGLE.'+IDIOMA+'.DESACTIVO';\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            function CargaInicial()\n");
      out.write("            {\n");
      out.write("                // Cogemos los valores pasados por get\n");
      out.write("                var par = getUrlVars();\n");
      out.write("                IDIOMA = getUrlVars()[\"idioma\"];\n");
      out.write("                if(IDIOMA !== undefined)\n");
      out.write("                {\n");
      out.write("                    CODIGO_IDIOMA = getUrlVars()[\"codigo\"];\n");
      out.write("                    ARRANQUE_AUTOMATICO = getUrlVars()[\"auto\"];\n");
      out.write("                }\n");
      out.write("                else\n");
      out.write("                {\n");
      out.write("                    IDIOMA = 'ESPANOL';\n");
      out.write("                    CODIGO_IDIOMA = 'es-ES';\n");
      out.write("                    ARRANQUE_AUTOMATICO = 'N'\n");
      out.write("                }\n");
      out.write("                document.title = 'RECVOZ.GOOGLE.'+IDIOMA+'.DESACTIVO';\n");
      out.write("                var myVar = setInterval(function(){ tratamientoVOZ(\"\") }, 1000);\n");
      out.write("                recognizing = false;\n");
      out.write("            }\n");
      out.write("         </script>           \n");
      out.write("        \n");
      out.write("    </head>\n");
      out.write("    <body onload=\"CargaInicial()\">\n");
      out.write("\t<header>\n");
      out.write("            <h1>La API de Reconocimiento de Voz en JavaScript: speechRecognition()</h1>\n");
      out.write("\t</header>\n");
      out.write("\t<section>\n");
      out.write("            <div class=\"example\">\n");
      out.write("                <textarea id=\"texto\"></textarea>\n");
      out.write("                <textarea id=\"logs\"></textarea>\n");
      out.write("                <button onclick=\"procesar()\" id=\"procesar\">Activar</button>\n");
      out.write("            </div>\n");
      out.write("\t</section>\n");
      out.write("\n");
      out.write("     \n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
